#!/usr/bin/env ruby

# Dice rolling program
# by Brian Towle -- March 2012

$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'dieroll'
require 'optparse'

usage_string =
  "Usage: roll [--ne --lt --le --eq --ge --gt]"+
  " [--headers] [-v val] [-r] [-p] <roll-string>"

options = {}
OptionParser.new do |opts|
  opts.banner = usage_string
  
  opts.separator ""

  opts.on('-r','--results','Print full roll results' ) do
    options[:results] = true
  end

  opts.separator ""

  options[:comparisons] = []
    
  opts.separator "Odds -"
  
  opts.separator "Print chances of rolling:"

  opts.on('--eq','--equal',
          'the given value') do
    options[:comparisons] << :equal
  end

  opts.on('--ne','--not-equal',
          'any value EXCEPT the given value') do
    options[:comparisons] << :not_equal
  end

  opts.on('--lt','--less-than',
          'less than the given value') do
    options[:comparisons] << :less_than
  end

  opts.on('--le','--less-than-or-equal',
          'less than or equal the given value') do
    options[:comparisons] << :less_than_or_equal
  end

  opts.on('--gt','--greater-than',
          'greater than the given value') do
    options[:comparisons] << :greater_than
  end

  opts.on('--ge','--greater-than-or-equal',
          'greater than or equal the given value') do
    options[:comparisons] << :greater_than_or_equal
  end

  opts.separator ""

  opts.on('--headers',
          'Show headers on the Odds table') do
    options[:headers] = true
  end

  opts.separator ""
  
  opts.on('-v','--value VALUE',
          'Sets the value to be used for the Odds switches',
          "Can be an int or a range 'X-Y'",
          'Will display all possible results if not set') do |value|
    value =~ /(-?\d+)-?(-?\d*)/
    unless($2.empty?)
      options[:val] = ($1.to_i..$2.to_i)
    else
      options[:val] = value.to_i
    end
  end

  opts.separator ""

  opts.on('-p','--probability','Print statistical information for the roll') do
    options[:probability] = true
  end

  opts.separator ""

  opts.on('-h','--help','Display this screen') do
    puts opts
    exit
  end

end.parse!

if(!!ARGV.first)
  dice = Dieroll::Roller.new(ARGV.first)
else
  abort(usage_string)
end

options.delete(:comparisons)  if options[:comparisons].empty?
options.delete(:val)  unless options[:comparisons]

if options[:results]
  dice.roll!
  puts dice.report
  puts ""
end

if options[:comparisons]
  options[:val] ||= :all
  table = dice.odds.table(options[:val],
                  options[:comparisons],
                  options[:headers])
  table.each do |result_line|
    puts result_line.join("\t")
  end
  puts ""
end

if options[:probability]
  puts "Minumum Result:\t\t" + dice.odds.offset.to_s
  puts "Maximum Result:\t\t" + dice.odds.max_result.to_s
  puts "Average Result:\t\t" + dice.odds.mean.to_s
  puts "Standard Deviation:\t" + dice.odds.standard_deviation.round(4).to_s
end

if options.empty?
  dice.roll!
  puts dice.total
end
